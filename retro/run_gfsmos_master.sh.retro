#!/bin/sh
#######################################################################
# run_gfsmos.sh
#
#  History:             
#     03/29/13   Scallion      Created (Adapted from Eric Engle's 
#                              "master" scripts)
#     12/03/13   Scallion      Added ptype/wxgrid
#
#  Purpose:
#      To run the GFS-MOS operational suite
#
#######################################################################
set -x

if (( $# > 1 )); then
   echo "Incorrect number of arguments."
   echo "Syntax: $0 [CYC (optional)]"
   echo "Exiting..."
   exit 1
fi

#######################################################################
#  Only run on the dev machine
#######################################################################
~/bin/run-on-dev.sh
[[ $? -eq 1 ]] && exit 1

#######################################################################
#  Source bash_profile to run with proper modules on cron
#######################################################################
#. ~/.bash_profile 1> /dev/null 2>&1
. ~/.bash_profile 

#######################################################################
#  Check the host to determine whether tide or gyre is prod
#######################################################################
chkhost=`hostname | cut -c1`

#######################################################################
#  Set global variables neede in the run script and/or each individual
#  job script.
#######################################################################
module load prod_envir
module load cfp-intel-sandybridge
module load craype-hugepages2M
export FORT_BUFFERED=TRUE
export KMP_AFFINITY=disabled
export envir=prod
export QUEUE=devmax

export COMDATEROOT=$COMROOTp1
export PTMPROOT=/gpfs/hps/ptmp/$USER
export STMPROOT=/gpfs/hps/stmp/$USER
export MODELROOT=/gpfs/hps/mdl/mdlstat/noscrub/usr/$USER
export MODELDIR=$MODELROOT/mos-oper/gfs_mos/trunk
#export MODELDIR=$NWROOT/gfsmos.v5.0.5
#export CODEDIR=$MODELROOT/mos-oper/mos_shared/branches/cray
export CODEDIR=$NWROOT/mos_shared.v2.6.1
#export CODEDIR=/gpfs/hps/nco/ops/nwpara/mos_shared.v2.6.0

export PDY=`date -u +%Y%m%d`
#export PDY=20160801
#export prevday=`ndate -24 ${PDY}00 | cut -c1-8`
export prevday=`date -u --date="${PDY} 0000 UTC 24 hours ago" +%Y%m%d`

let hour=`date -u +"%-H"`
if [[ $hour -ge 4 && $hour -lt 10 ]]; then
   export cyc=00
   export range=both
elif [[ $hour -ge 10 && $hour -lt 16 ]]; then
   export cyc=06
   export range=both
elif [[ $hour -ge 16 && $hour -lt 22 ]]; then
   export cyc=12
   export range=both
elif [[ $hour -ge 22 && $hour -le 23 ]]; then
   export cyc=18
   export range=both
else
   export cyc=18
   export PDY=$prevday
   export range=both
fi

cyc_list="00 06 12 18"
if [[ $# == 1 ]] && [[ $cyc_list =~ $1 ]]; then
   export cyc=$1
   if [ "$cyc" == "00" -o "$cyc" == "12" ]; then
      export range=both
   else
      export range=both
   fi
elif [[ $# == 1 ]]; then
   echo "$1 is not a valid cycle (choose 00 or 12)" 
   exit 1
fi

export range=both
export skipmodel=n
export skipprep=n
export cycle="t${cyc}z"
export pid="gfs_v14.$$"
#export dailylog=$PTMPROOT/dailylog/log.$PDY
export dailylog=$PTMPROOT/dailylog/log_gfsretro
export jlogfile=$dailylog/jlogfile_gfsmos
mkdir -p $dailylog

export SENDDBN=NO
export GET_IOPROFILE=NO
export KEEPDATA=NO
export stnonly=Y

# Specify Execution Areas
export SCRIPTSretro=$MODELDIR/retro/scripts
export HOMEcode=$CODEDIR
export HOMEmdl=$MODELDIR
#export utilscript=/gpfs/hps/mdl/mdlstat/noscrub/usr/$USER/ush

if [ ! -d $HOMEmdl ]; then
   echo  "$HOMEmdl does not exist"
   exit 1
fi

if [ ! -d $HOMEcode ]; then
   echo  "$HOMEcode does not exist"
   exit 1
fi

# Load modules
module load prod_util
module grib_util/1.0.5

# Define COMOUT (COMIN will vary by job)
#export GFSDIR=$COMROOTp2/gfs/prod/gfs.$PDY
#export GFSDIR=/gpfs/hps/ptmp/emc.glopara/com2/gfs/para/gfs.$PDY
#export GFSDIR=/gpfs/tp2/mdl/mdlens/noscrub/gfsreforecasts/${PDY}${cyc}
if [[ $SITE == "LUNA" ]]; then
   export GFSDIR=/gpfs/tp2/mdl/mdlens/noscrub/gfsreforecasts/warm_eval
   export SVI=/gpfs/td1/mdl/mdlstat/save
else
   export GFSDIR=/gpfs/gp2/mdl/mdlens/noscrub/gfsreforecasts/warm_eval
   export SVI=/gpfs/gd1/mdl/mdlstat/save
fi
export COMINgfs=$GFSDIR
#export COMOUT=$PTMPROOT/qprod/gfsmos.$PDY
export COMOUT=$PTMPROOT/qprod/gfsretro
#export COMINm1=$PTMPROOT/gfsmos.$prevday
#export COMINm1=$PTMPROOT/qprod/gfsmos_gmos_pre-nbmv2.$prevday
export COMINm1=$PTMPROOT/qprod/gfsmos.$prevday

if [[ ! -d $PTMPROOT/qprod ]]; then
   mkdir -p $PTMPROOT/qprod
fi

if [[ ! -d $COMOUT ]]; then
   mkdir -p $COMOUT
fi

export PCOM=$PTMPROOT/pcom

if [[ ! -d $PCOM ]]; then
   mkdir -p $PCOM
fi

export datlist=`seq 20160601 01 20160615`
NUMDATES=`echo $datlist | wc -w`

if [ "$range" == "short" -o "$range" == "both" ]; then
########################################################################
########################################################################
#             SHORT-RANGE JOBS
########################################################################
########################################################################

######################################################################## 
#  Wait for 1/4 degree model data
######################################################################## 
#if [ "$skipmodel" != "y" ]; then
#let attempts=1
#while [[ $attempts -le 120 ]]
#do
#   if [[ -f $GFSDIR/gfs.$cycle.pgrb2.0p25.f096 ]]; then
#      echo "Model file found.  Proceeding..."
#      break
#   else
#      if [[ $attempts -le 60 ]]; then
#         sleep 60
#      else
#         sleep 180
#      fi
#      attempts=$((attempts+1))
#   fi
#done

#if [[ $attempts -gt 120 ]]; then
#   echo "Waited 4 hours for model file, but it did not appear."
#   echo "Exiting..."
#   exit 1
#fi

#fi #endif for skipmodel

######################################################################## 
#  JGFSMOS_PREP47
######################################################################## 
if [[ "$skipprep" != "y" ]]; then
   export job=gfsmos_prep_${cyc}_${pid}
   export COMIN=$GFSDIR
   jobCard=$HOMEmdl/retro/jobs/JGFSMOS_PREP
#    Define DATA and create directory
   export DATA=$STMPROOT/qprod/gfsmos_prep_${cyc}
   export logfile=$dailylog/$job.out
   export out_dir=$dailylog

   export PTILE=15
   #export NTASK=3
   export OMP_NUM_THREADS=1
   export TOTAL_TASKS=$((NUMDATES*3))
   export TOTAL_NODES=$((TOTAL_TASKS/PTILE))
   export CHK_NODE_INCR=$((TOTAL_TASKS%PTILE))
   if [[ $CHK_NODE_INCR -gt 0 ]]; then
      export TOTAL_NODES=$((TOTAL_NODES+1))
   fi
 
   export TOTAL_CPUS=$((TOTAL_NODES*24))

   bsub -J $job \
        -o $logfile \
        -q $QUEUE \
        -W 2:00 \
        -M 2500 \
        -P MDLST-T2O \
        -extsched 'CRAYLINUX[]' \
        -R '1*{select[craylinux && !vnode]} + $TOTAL_CPUS*{select[craylinux && vnode]span[ptile=24]}' \
        $jobCard

fi #end for skipprep

######################################################################## 
#  JGFSMOS_FORECAST
######################################################################## 
#if [[ "$PDY" != `date -u +%Y%m%d` ]]; then
#   export COMINhourly=$PTMPROOT/dcom/hourly.$PDY
#   if [[ ! -d $COMINhourly ]]; then
#      mkdir -p $COMINhourly
#   fi
#   \cp $SVI/rotate/hry/${PDY}03 $COMINhourly/sfctbl.03
#   \cp $SVI/rotate/hry/${PDY}09 $COMINhourly/sfctbl.09
#   \cp $SVI/rotate/hry/${PDY}15 $COMINhourly/sfctbl.15
#   \cp $SVI/rotate/hry/${PDY}21 $COMINhourly/sfctbl.21
#fi

if test $cyc -eq '00'
then
   export obhr1=03
elif test $cyc -eq '06'
then
   export obhr1=09
elif test $cyc -eq '12'
then
   export obhr1=15
elif test $cyc -eq '18'
then
   export obhr1=21
fi


# Change COMIN to get files from user's PTMP "qprod" area 
export COMIN=$COMOUT

export job=gfsmos_fcst_${cyc}_${pid}
jobCard=$HOMEmdl/retro/jobs/JGFSMOS_FORECAST
export DATA=$STMPROOT/qprod/gfsmos_fcst_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
if [[ "$skipprep" != "y" ]]; then
   deps="done(gfsmos_prep_${cyc}_${pid})"
else
   deps=""
fi
if [[ $cyc == "00" || $cyc == "12" ]] && [[ "$stnonly" != "Y" ]]; then
   complist="metar pac cooprfcmeso goe higoe akgoe tstms"
   complist2="copopo3 coptype akpopo3 akptype"
elif [[ $cyc == "00" || $cyc == "12" ]] && [[ "$stnonly" == "Y" ]]; then
   complist="metar cooprfcmeso pac tstms"
   complist2=""
   
else
   complist="metar cooprfcmeso tstms"
   complist2=""
fi

if [[ $cyc == "00" || $cyc == "12" ]] && [[ "$stnonly" != "Y" ]]; then
   export PTILE=11
   export NTASK=11
   export OMP_NUM_THREADS=1
elif [[ $cyc == "00" || $cyc == "12" ]] && [[ "$stnonly" == "Y" ]]; then
   #export PTILE=4
   #export NTASK=4
   export OMP_NUM_THREADS=1
else
   #export PTILE=3
   #export NTASK=3
   export OMP_NUM_THREADS=1
fi

export PTILE=15
export OMP_NUM_THREADS=1
mpmd_num=`echo $complist | wc -w`
export TOTAL_TASKS=$((NUMDATES*$mpmd_num))
   export TOTAL_NODES=$((TOTAL_TASKS/PTILE))
export CHK_NODE_INCR=$((TOTAL_TASKS%PTILE))
if [[ $CHK_NODE_INCR -gt 0 ]]; then
   export TOTAL_NODES=$((TOTAL_NODES+1))
fi
 
export TOTAL_CPUS=$((TOTAL_NODES*24))

bsub -J ${job} -oo $logfile -q ${QUEUE} -P MDLST-T2O \
     -W 1:00 -M 2000 \
     -extsched 'CRAYLINUX[]' \
     -R '1*{select[craylinux && !vnode]} + $TOTAL_CPUS*{select[craylinux && vnode]span[ptile=24]}' \
     -w "$deps" \
     $jobCard

######################################################################## 
#     JGFSMOS_PRDGEN
######################################################################## 
jobCard=$HOMEmdl/retro/jobs/JGFSMOS_PRDGEN
export job=gfsmos_prdgen_${cyc}_${pid}
# Change COMIN back to COMOUT
export COMIN=$COMOUT
# Define DATA and create directory
export DATA=$STMPROOT/qprod/gfsmos_prdgen_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
deps="done(gfsmos_fcst_${cyc}_${pid})"

export PTILE=24
export OMP_NUM_THREADS=1
export TOTAL_TASKS=$((NUMDATES*1))
export TOTAL_NODES=$((TOTAL_TASKS/24))
export CHK_NODE_INCR=$((TOTAL_TASKS%24))
if [[ $CHK_NODE_INCR -gt 0 ]]; then
   export TOTAL_NODES=$((TOTAL_NODES+1))
fi
 
export TOTAL_CPUS=$((TOTAL_NODES*24))
 
# Set Nodes
if [ $cyc -eq 00 -o $cyc -eq 12 ] -a [ $stnonly -ne Y ]; then
   nodes='1*{select[craylinux && !vnode]} + 168*{select[craylinux && vnode]span[ptile=24]}'
   export PTILE=1
   export NTASK=1
   export OMP_NUM_THREADS=20
else
   nodes='1*{select[craylinux && !vnode]} + $TOTAL_CPUS*{select[craylinux && vnode]span[ptile=24]}'
   #export PTILE=1
   #export NTASK=1
   export OMP_NUM_THREADS=1
fi

bsub -J ${job} -oo $logfile -q ${QUEUE} -P MDLST-T2O \
     -W 1:00 -M 2000 \
     -extsched 'CRAYLINUX[]' \
     -R "$nodes" \
     -w "$deps" \
     $jobCard

fi #endif short

########################################################################
########################################################################
#             EXTENDED-RANGE JOBS
########################################################################
########################################################################

if [ "$range" == "ext" -o "$range" == "both" ]; then

######################################################################## 
#  Wait for 1/4 degree model data
######################################################################## 
#if [ "$skipmodel" != "y" ]; then
#let attempts=1
#proj_list=`seq -f %03g 252 12 384`
#for tau in $proj_list
#do
#   while [[ $attempts -le 120 ]]
#   do
#      if [[ -f $GFSDIR/gfs.$cycle.pgrb2.0p25.f${tau} ]]; then
#         echo "Model file found.  Proceeding to next..."
#         break
#      else
#         if [[ $attempts -le 60 ]]; then
#            sleep 60
#         else
#            sleep 180
#         fi
#         attempts=$((attempts+1))
#      fi
#   done
#done

#if [[ $attempts -gt 120 ]]; then
#   echo "Waited 4 hours for model file, but it did not appear."
#   echo "Exiting..."
#   exit 1
#fi

#fi #endif for skipmodel

########################################################################
#  JGFSMOS_EXT_PREP47
########################################################################
if [[ "$skipprep" != "y" ]]; then
   export job=gfsmos_extprep_${cyc}_${pid}
   export COMIN=$GFSDIR
   jobCard=$HOMEmdl/retro/jobs/JGFSMOS_EXT_PREP
#    Define DATA and create directory
   export DATA=$STMPROOT/qprod/gfsmos_extprep_${cyc}
   export logfile=$dailylog/$job.out
   export out_dir=$dailylog

   #export PTILE=2
   #export NTASK=2
   export OMP_NUM_THREADS=1

   export PTILE=15
   #export NTASK=3
   export TOTAL_TASKS=$((NUMDATES*2))
   export TOTAL_NODES=$((TOTAL_TASKS/PTILE))
   export CHK_NODE_INCR=$((TOTAL_TASKS%PTILE))
   if [[ $CHK_NODE_INCR -gt 0 ]]; then
      export TOTAL_NODES=$((TOTAL_NODES+1))
   fi
 
   export TOTAL_CPUS=$((TOTAL_NODES*24))

   bsub -J $job \
        -o $logfile \
        -q $QUEUE \
        -W 2:00 \
        -M 2500 \
        -P MDLST-T2O \
        -extsched 'CRAYLINUX[]' \
        -R '1*{select[craylinux && !vnode]} + $TOTAL_CPUS*{select[craylinux && vnode]span[ptile=24]}' \
        $jobCard

fi #end for skipprep

#  Skip EXT_FORECAST for 06/18
if [ $cyc -eq 00 -o $cyc -eq 12 ]; then
######################################################################## 
#  JGFSMOS_EXT_FORECAST
######################################################################## 
#if [[ "$PDY" != `date -u +%Y%m%d` ]]; then
#   export COMINhourly=$PTMPROOT/dcom/hourly.$PDY
#   if [[ ! -d $COMINhourly ]]; then
#      mkdir -p $COMINhourly
#   fi
#   \cp $SVI/rotate/hry/${PDY}03 $COMINhourly/sfctbl.03
#   \cp $SVI/rotate/hry/${PDY}09 $COMINhourly/sfctbl.09
#   \cp $SVI/rotate/hry/${PDY}15 $COMINhourly/sfctbl.15
#   \cp $SVI/rotate/hry/${PDY}21 $COMINhourly/sfctbl.21
#fi

# Change COMIN to get files from user's PTMP "qprod" area 
export COMIN=$COMOUT

export job=gfsmos_extfcst_${cyc}_${pid}
jobCard=$HOMEmdl/retro/jobs/JGFSMOS_EXT_FORECAST
export DATA=$STMPROOT/qprod/gfsmos_extfcst_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
if [[ "$skipprep" != "y" && "$range" == "both" ]]; then
   deps="done(gfsmos_extprep_${cyc}_${pid}) && done(gfsmos_fcst_${cyc}_${pid})"
elif [[ "$skipprep" != "y" && "$range" == "ext" ]]; then
   deps="done(gfsmos_extprep_${cyc}_${pid})"
elif [[ "$skipprep" == "y" && "$range" == "ext" ]]; then
   deps=""
else
   deps="done(gfsmos_fcst_${cyc}_${pid})"
fi

if [[ "$stnonly" != "Y" ]]; then
   export PTILE=10
   export NTASK=10
   export OMP_NUM_THREADS=1
else
#   export PTILE=3
#   export NTASK=3
   export OMP_NUM_THREADS=1
fi

export PTILE=15
export TOTAL_TASKS=$((NUMDATES*3))
   export TOTAL_NODES=$((TOTAL_TASKS/PTILE))
export CHK_NODE_INCR=$((TOTAL_TASKS%PTILE))
if [[ $CHK_NODE_INCR -gt 0 ]]; then
   export TOTAL_NODES=$((TOTAL_NODES+1))
fi
 
export TOTAL_CPUS=$((TOTAL_NODES*24))


bsub -J ${job} -oo $logfile -q $QUEUE -P MDLST-T2O \
     -W 1:00 -M 2000 \
     -extsched 'CRAYLINUX[]' \
     -R '1*{select[craylinux && !vnode]} + $TOTAL_CPUS*{select[craylinux && vnode]span[ptile=24]}' \
     -w "$deps" \
     $jobCard

fi #endif for skipping 06/18 ext_fcst
######################################################################## 
#  JGFSMOS_EXT_PRDGEN
######################################################################## 
jobCard=$HOMEmdl/retro/jobs/JGFSMOS_EXT_PRDGEN
export job=gfsmos_extprdgen_${cyc}_${pid}
# Change COMIN back to COMOUT
export COMIN=$COMOUT
# Define DATA and create directory
export DATA=$STMPROOT/qprod/gfsmos_extprdgen_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
if [[ "$cyc" == "06" || "$cyc" == "18" ]]; then
   deps="done(gfsmos_prdgen_${cyc}_${pid})"
elif [[ "$range" == "both" ]]; then
   deps="done(gfsmos_extfcst_${cyc}_${pid}) && done(gfsmos_prdgen_${cyc}_${pid})"
else
   deps="done(gfsmos_extfcst_${cyc}_${pid})"
fi

export PTILE=24
export TOTAL_TASKS=$((NUMDATES*1))
   export TOTAL_NODES=$((TOTAL_TASKS/24))
export CHK_NODE_INCR=$((TOTAL_TASKS%24))
if [[ $CHK_NODE_INCR -gt 0 ]]; then
   export TOTAL_NODES=$((TOTAL_NODES+1))
fi
 
export TOTAL_CPUS=$((TOTAL_NODES*24))

# Set Nodes
if [ $cyc -eq 00 -o $cyc -eq 12 ] -a [ $stnonly -ne Y ]; then
   nodes='1*{select[craylinux && !vnode]} + 168*{select[craylinux && vnode]span[ptile=24]}'
   export PTILE=1
   export NTASK=1
   export OMP_NUM_THREADS=20
else
   nodes='1*{select[craylinux && !vnode]} + $TOTAL_CPUS*{select[craylinux && vnode]span[ptile=24]}'
   #export PTILE=1
   #export NTASK=1
   export OMP_NUM_THREADS=1
fi

bsub -J ${job} -oo $logfile -q ${QUEUE} -P MDLST-T2O \
     -W 1:00 -M 2000 \
     -extsched 'CRAYLINUX[]' \
     -R "$nodes" \
     -w "$deps" \
     $jobCard

#  Exit here with $cyc is 06 or 18
if [ $cyc -eq 06 -o $cyc -eq 18 ]; then
   exit 0
fi

fi #endif for ext/both

exit 0
