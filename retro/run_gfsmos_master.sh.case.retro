#!/bin/sh
#######################################################################
# run_gfsmos.sh
#
#  History:             
#     03/29/13   Scallion      Created (Adapted from Eric Engle's 
#                              "master" scripts)
#     12/03/13   Scallion      Added ptype/wxgrid
#
#  Purpose:
#      To run the GFS-MOS operational suite
#
#######################################################################
set -x

if (( $# > 1 )); then
   echo "Incorrect number of arguments."
   echo "Syntax: $0 [CYC (optional)]"
   echo "Exiting..."
   exit 1
fi

#######################################################################
#  Only run on the dev machine
#######################################################################
/u/Scott.Scallion/bin/run-on-dev.sh
[[ $? -eq 1 ]] && exit 1

#######################################################################
#  Source bash_profile to run with proper modules on cron
#######################################################################
#. ~/.bash_profile 1> /dev/null 2>&1
. ~/.bash_profile 

#######################################################################
#  Check the host to determine whether tide or gyre is prod
#######################################################################
chkhost=`hostname | cut -c1`

#######################################################################
#  Set global variables neede in the run script and/or each individual
#  job script.
#######################################################################
module load prod_envir
module load cfp-intel-sandybridge
module load cray-hugepages2M
export FORT_BUFFERED=TRUE
export KMP_AFFINITY=disabled
export envir=prod
export QUEUE=dev

export COMDATEROOT=$COMROOTp1
export PTMPROOT=/gpfs/hps2/ptmp/Geoff.Wagner
export STMPROOT=/gpfs/hps2/stmp/Geoff.Wagner
export MODELROOT=/gpfs/hps3/mdl/mdlstat/noscrub/usr/Geoff.Wagner
#export MODELROOT=/gpfs/hps3/mdl/mdlstat/noscrub/usr/$USER
export MODELDIR=$MODELROOT/mos-oper/gfs_mos/branches/gmos2017
export CODEDIR=$MODELROOT/mos-oper/mos_shared/branches/gmos_upgrade2017
#export CODEDIR=/gpfs/hps/nco/ops/nwpara/mos_shared.v2.6.1

dateIn=$1
export PDY=`echo $dateIn | cut -c 1-8`
export cyc=`echo $dateIn | cut -c 9-10`
#export PDY=`date -u +%Y%m%d`
#export PDY=20180202
export prevday=`ndate -24 ${PDY}00 | cut -c1-8`
#export prevday=`date -u --date="${PDY} 0000 UTC 24 hours ago" +%Y%m%d`

let hour=`date -u +"%-H"`
#if [[ $hour -ge 4 && $hour -lt 10 ]]; then
   #export cyc=00
   #export range=both
#elif [[ $hour -ge 10 && $hour -lt 16 ]]; then
   #export cyc=06
   #export range=both
#elif [[ $hour -ge 16 && $hour -lt 22 ]]; then
   #export cyc=12
   #export range=both
#elif [[ $hour -ge 22 && $hour -le 23 ]]; then
   #export cyc=18
   #export range=both
#else
   #export cyc=18
   #export PDY=$prevday
   #export range=both
#fi

cyc_list="00 06 12 18"
#if [[ $# == 1 ]] && [[ $cyc_list =~ $1 ]]; then
   #export cyc=$1
   #if [ "$cyc" == "00" -o "$cyc" == "12" ]; then
      #export range=both
   #else
      #export range=both
   #fi
#elif [[ $# == 1 ]]; then
   #echo "$1 is not a valid cycle (choose 00 or 12)" 
   #exit 1
#fi

export range=both
export skipmodel=n
export skipprep=n
export stnonly=N
export cycle="t${cyc}z"
export pid="gfs_retro.$$"
export dailylog=$PTMPROOT/dailylog/log.$PDY
export jlogfile=$dailylog/jlogfile_gfsmos
mkdir -p $dailylog

export SENDDBN=NO
export GET_IOPROFILE=NO

# Specify Execution Areas
export HOMEmdl=$MODELDIR
export HOMEcode=$CODEDIR
export utilscript=/gpfs/hps3/mdl/mdlstat/noscrub/usr/Scott.Scallion/ush

if [ ! -d $HOMEmdl ]; then
   echo  "$HOMEmdl does not exist"
   exit 1
fi

if [ ! -d $HOMEcode ]; then
   echo  "$HOMEcode does not exist"
   exit 1
fi

# Load modules
module load prod_util
module grib_util/1.0.3

# Define COMOUT (COMIN will vary by job)
#export GFSDIR=$COMROOTp2/gfs/prod/gfs.$PDY
#export GFSDIR=/gpfs/hps/nco/ops/com/gfs/prod/gfs.$PDY
export GFSDIR=/gpfs/tp2/mdl/mdlens/noscrub/gmos/retro/retro.$PDY
export COMINgfs=$GFSDIR
#export COMOUT=/gpfs/tp2/mdl/mdlens/noscrub/gmos/retro/retro.$PDY
export COMOUT=$PTMPROOT/retro/retro.$PDY
#export COMINm1=$PTMPROOT/gfsmos.$prevday
#export COMINm1=$PTMPROOT/qprod/gfsmos_gmos_pre-nbmv2.$prevday
#export COMINm1=$PTMPROOT/qprod/gfsmos.$PDYm1

if [[ ! -d $PTMPROOT/qprod ]]; then
   mkdir -p $PTMPROOT/qprod
fi

if [[ ! -d $COMOUT ]]; then
   mkdir -p $COMOUT
fi

export PCOM=$PTMPROOT/pcom

if [[ ! -d $PCOM ]]; then
   mkdir -p $PCOM
fi

if [ "$range" == "short" -o "$range" == "both" ]; then
########################################################################
########################################################################
#             SHORT-RANGE JOBS
########################################################################
########################################################################

######################################################################## 
#  Wait for 1 degree model data
######################################################################## 
if [ "$skipmodel" != "y" ]; then
let attempts=1
while [[ $attempts -le 120 ]]
do
   if [[ -f $GFSDIR/gfs.$cycle.pgrb2.1p00.f096 ]]; then
      echo "Model file found.  Proceeding..."
      break
   else
      if [[ $attempts -le 60 ]]; then
         sleep 60
      else
         sleep 180 
      fi  
      attempts=$((attempts+1))
   fi  
done

if [[ $attempts -gt 120 ]]; then
   echo "Waited 4 hours for model file, but it did not appear."
   echo "Exiting..."
   exit 1
fi

fi #endif for skipmodel

######################################################################## 
#  Wait for 1/4 degree model data
######################################################################## 
if [ "$skipmodel" != "y" ]; then
let attempts=1
while [[ $attempts -le 120 ]]
do
   if [[ -f $GFSDIR/gfs.$cycle.pgrb2.0p25.f096 ]]; then
      echo "Model file found.  Proceeding..."
      break
   else
      if [[ $attempts -le 60 ]]; then
         sleep 60
      else
         sleep 180
      fi
      attempts=$((attempts+1))
   fi
done

if [[ $attempts -gt 120 ]]; then
   echo "Waited 4 hours for model file, but it did not appear."
   echo "Exiting..."
   exit 1
fi

fi #endif for skipmodel

######################################################################## 
#  Wait for 1.0 degree GFS model files before running (Pacific MOS)
######################################################################## 
if [ "$skipmodel" != "y" ]; then
let attempts=1
while [[ $attempts -le 120 ]]
do
   if [[ -f $GFSDIR/gfs.$cycle.pgrb2.1p00.f096 ]]; then
      echo "1.0 degree model file found.  Proceeding..."
      break
   else
      if [[ $attempts -le 60 ]]; then
         sleep 60
      else
         sleep 180
      fi
      attempts=$((attempts+1))
   fi
done

if [[ $attempts -gt 120 ]]; then
   echo "Waited 4 hours for model file, but it did not appear."
   echo "Exiting..."
   exit 1
fi

fi #endif for skipmodel
######################################################################## 
#  JGFSMOS_PREP47
######################################################################## 
if [[ "$skipprep" != "y" ]]; then
   export job=gfsmos_prep_${cyc}_${pid}
   export COMIN=$GFSDIR
   jobCard=$HOMEmdl/jobs/JGFSMOS_PREP_RETRO
#    Define DATA and create directory
   export DATA=$STMPROOT/retro/gfsmos_prep_${cyc}
   export logfile=$dailylog/$job.out
   export out_dir=$dailylog

   export PTILE=7
   export NTASK=7
   export OMP_NUM_THREADS=1

   bsub -J $job \
        -o $logfile \
        -q $QUEUE \
        -W 2:00 \
        -M 2500 \
        -P MDLST-T2O \
        -extsched 'CRAYLINUX[]' \
        -R '1*{select[craylinux && !vnode]} + 24*{select[craylinux && vnode]span[ptile=24]}' \
        $jobCard

fi #end for skipprep

######################################################################## 
#  JGFSMOS_FORECAST
######################################################################## 
if [[ "$PDY" != `date -u +%Y%m%d` ]]; then
   export COMINhourly=/ptmpp2/Geoff.Wagner/dcom/hourly.$PDY
   #export COMINhourly=/ptmpp2/$USER/dcom/hourly.$PDY
   if [[ ! -d $COMINhourly ]]; then
      mkdir -p $COMINhourly
   fi
   \cp /mdlstat/save/rotate/hry/${PDY}03 $COMINhourly/sfctbl.03
   \cp /mdlstat/save/rotate/hry/${PDY}09 $COMINhourly/sfctbl.09
   \cp /mdlstat/save/rotate/hry/${PDY}15 $COMINhourly/sfctbl.15
   \cp /mdlstat/save/rotate/hry/${PDY}21 $COMINhourly/sfctbl.21
fi

# Change COMIN to get files from user's PTMP "qprod" area 
export COMIN=$COMOUT

export job=gfsmos_fcst_${cyc}_${pid}
jobCard=$HOMEmdl/jobs/JGFSMOS_FORECAST_RETRO
export DATA=$STMPROOT/retro/gfsmos_fcst_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
if [[ "$skipprep" != "y" ]]; then
   deps="done(gfsmos_prep_${cyc}_${pid})"
else
   deps=""
fi
if [[ $cyc == "00" || $cyc == "12" ]]; then
   complist="metar pac cooprfcmeso goe higoe akgoe tstms"
   complist2="copopo3 coptype akpopo3 akptype"
else
   complist="metar cooprfcmeso tstms"
   complist2=""
fi

if [[ $cyc == "00" || $cyc == "12" ]]; then
   export PTILE=4
   export NTASK=11
   export OMP_NUM_THREADS=1
else
   export PTILE=3
   export NTASK=3
   export OMP_NUM_THREADS=1
fi

bsub -J ${job} -oo $logfile -q ${QUEUE} -P MDLST-T2O \
     -W 2:30 -M 2000 \
     -extsched 'CRAYLINUX[]' \
     -R '1*{select[craylinux && !vnode]} + 72*{select[craylinux && vnode]span[ptile=24]}' \
     -w "$deps" \
     $jobCard

######################################################################## 
#     JGFSMOS_PRDGEN
######################################################################## 
jobCard=$HOMEmdl/jobs/JGFSMOS_PRDGEN_RETRO
export job=gfsmos_prdgen_${cyc}_${pid}
# Change COMIN back to COMOUT
export COMIN=$COMOUT
# Define DATA and create directory
export DATA=$STMPROOT/retro/gfsmos_prdgen_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
deps="done(gfsmos_fcst_${cyc}_${pid})"
# Set Nodes
if [ $cyc -eq 00 -o $cyc -eq 12 ]; then
   nodes='1*{select[craylinux && !vnode]} + 168*{select[craylinux && vnode]span[ptile=24]}'
   export PTILE=1
   export NTASK=1
   export OMP_NUM_THREADS=20
else
   nodes='1*{select[craylinux && !vnode]} + 24*{select[craylinux && vnode]span[ptile=24]}'
   export PTILE=1
   export NTASK=1
   export OMP_NUM_THREADS=1
fi

bsub -J ${job} -oo $logfile -q ${QUEUE} -P MDLST-T2O \
     -W 1:00 -M 2000 \
     -extsched 'CRAYLINUX[]' \
     -R "$nodes" \
     -w "$deps" \
     $jobCard

########################################################################
#   JGFSMOS_WX_PRDGEN (00z and 12z only)
########################################################################
if [ $cyc -eq 00 -o $cyc -eq 12 ]; then
   jobCard=$HOMEmdl/jobs/JGFSMOS_WX_PRDGEN_RETRO
   export job=gfsmos_wx_prdgen_${cyc}_${pid}
   # Change COMIN back to COMOUT
   export COMIN=$COMOUT
   # Define DATA and create directory
   export DATA=$STMPROOT/retro/gfsmos_wx_prdgen_${cyc}
   export logfile=$dailylog/$job.out
   export out_dir=$dailylog
   # Set dependencies
   deps="done(gfsmos_prdgen_${cyc}_${pid})"

   export PTILE=1
   export NTASK=1
   export OMP_NUM_THREADS=20

   bsub -J ${job} -oo $logfile -q ${QUEUE} -P MDLST-T2O \
        -W 1:00 -M 1000 \
        -extsched 'CRAYLINUX[]' \
        -R '1*{select[craylinux && !vnode]} + 48*{select[craylinux && vnode]span[ptile=24]}' \
        -w "$deps" \
        $jobCard
fi

fi #endif short

########################################################################
########################################################################
#             EXTENDED-RANGE JOBS
########################################################################
########################################################################

if [ "$range" == "ext" -o "$range" == "both" ]; then

######################################################################## 
#  Wait for 1/4 degree model data
######################################################################## 
if [ "$skipmodel" != "y" ]; then
let attempts=1
proj_list=`seq -f %03g 252 12 384`
for tau in $proj_list
do
   while [[ $attempts -le 120 ]]
   do
      if [[ -f $GFSDIR/gfs.$cycle.pgrb2.0p25.f${tau} && -f $GFSDIR/gfs.$cycle.pgrb2.0p50.f${tau} ]]; then
         echo "Model file found.  Proceeding to next..."
         break
      else
         if [[ $attempts -le 60 ]]; then
            sleep 60
         else
            sleep 180
         fi
         attempts=$((attempts+1))
      fi
   done
done

if [[ $attempts -gt 120 ]]; then
   echo "Waited 4 hours for model file, but it did not appear."
   echo "Exiting..."
   exit 1
fi

fi #endif for skipmodel

######################################################################## 
#  Wait for 1.0/2.5 degree GFS model files before running (Pacific GFS)
######################################################################## 
if [ "$skipmodel" != "y" ]; then
let attempts1deg=1
proj_list=`seq -f %03g 204 12 384`
for tau in $proj_list
do
   while [[ $attempts1deg -le 120 ]]
   do
      if [[ -f $GFSDIR/gfs.$cycle.pgrb2.1p00.f384 ]]; then
         echo "1.0/2.5 degree model files found.  Proceeding to next..."
         break
      else
         if [[ $attempts1deg -le 60 ]]; then
            sleep 60
         else
            sleep 180
         fi
         attempts1deg=$((aattempts1deg+1))
      fi
   done
done

if [[ $attempts1deg -gt 120 ]]; then
   echo "Waited 4 hours for 1.0 degree model file, but it did not appear."
   echo "Exiting..."
   exit 1
fi

fi #endif for skipmodel

########################################################################
#  JGFSMOS_EXT_PREP47
########################################################################
if [[ "$skipprep" != "y" ]]; then
   export job=gfsmos_extprep_${cyc}_${pid}
   export COMIN=$GFSDIR
   jobCard=$HOMEmdl/jobs/JGFSMOS_EXT_PREP_RETRO
#    Define DATA and create directory
   export DATA=$STMPROOT/retro/gfsmos_extprep_${cyc}
   export logfile=$dailylog/$job.out
   export out_dir=$dailylog

   export PTILE=5
   export NTASK=10
   export OMP_NUM_THREADS=1

   bsub -J $job \
        -o $logfile \
        -q $QUEUE \
        -W 2:00 \
        -M 2500 \
        -P MDLST-T2O \
        -extsched 'CRAYLINUX[]' \
        -R '1*{select[craylinux && !vnode]} + 48*{select[craylinux && vnode]span[ptile=24]}' \
        $jobCard

fi #end for skipprep

#  Skip EXT_FORECAST for 06/18
if [ $cyc -eq 00 -o $cyc -eq 12 ]; then
######################################################################## 
#  JGFSMOS_EXT_FORECAST
######################################################################## 
if [[ "$PDY" != `date -u +%Y%m%d` ]]; then
   export COMINhourly=/ptmpp2/Geoff.Wagner/dcom/hourly.$PDY
   #export COMINhourly=/ptmpp2/$USER/dcom/hourly.$PDY
   if [[ ! -d $COMINhourly ]]; then
      mkdir -p $COMINhourly
   fi
   \cp /mdlstat/save/rotate/hry/${PDY}03 $COMINhourly/sfctbl.03
   \cp /mdlstat/save/rotate/hry/${PDY}09 $COMINhourly/sfctbl.09
   \cp /mdlstat/save/rotate/hry/${PDY}15 $COMINhourly/sfctbl.15
   \cp /mdlstat/save/rotate/hry/${PDY}21 $COMINhourly/sfctbl.21
fi

# Change COMIN to get files from user's PTMP "qprod" area 
export COMIN=$COMOUT

export job=gfsmos_extfcst_${cyc}_${pid}
jobCard=$HOMEmdl/jobs/JGFSMOS_EXT_FORECAST_RETRO
export DATA=$STMPROOT/retro/gfsmos_extfcst_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
if [[ "$skipprep" != "y" && "$range" == "both" ]]; then
   deps="done(gfsmos_extprep_${cyc}_${pid}) && done(gfsmos_fcst_${cyc}_${pid})"
elif [[ "$skipprep" != "y" && "$range" == "ext" ]]; then
   deps="done(gfsmos_extprep_${cyc}_${pid})"
elif [[ "$skipprep" == "y" && "$range" == "ext" ]]; then
   deps=""
else
   deps="done(gfsmos_fcst_${cyc}_${pid})"
fi

export PTILE=4
export NTASK=10
export OMP_NUM_THREADS=1

bsub -J ${job} -oo $logfile -q $QUEUE -P MDLST-T2O \
     -W 4:00 -M 2000 \
     -extsched 'CRAYLINUX[]' \
     -R '1*{select[craylinux && !vnode]} + 72*{select[craylinux && vnode]span[ptile=24]}' \
     -w "$deps" \
     $jobCard

fi #endif for skipping 06/18 ext_fcst
######################################################################## 
#  JGFSMOS_EXT_PRDGEN
######################################################################## 
jobCard=$HOMEmdl/jobs/JGFSMOS_EXT_PRDGEN_RETRO
export job=gfsmos_extprdgen_${cyc}_${pid}
# Change COMIN back to COMOUT
export COMIN=$COMOUT
# Define DATA and create directory
export DATA=$STMPROOT/retro/gfsmos_extprdgen_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
if [[ "$cyc" == "06" || "$cyc" == "18" ]]; then
   deps="done(gfsmos_prdgen_${cyc}_${pid})"
elif [[ "$range" == "both" ]]; then
   deps="done(gfsmos_extfcst_${cyc}_${pid}) && done(gfsmos_prdgen_${cyc}_${pid})"
else
   deps="done(gfsmos_extfcst_${cyc}_${pid})"
fi
# Set Nodes
if [ $cyc -eq 00 -o $cyc -eq 12 ]; then
   nodes='1*{select[craylinux && !vnode]} + 168*{select[craylinux && vnode]span[ptile=24]}'
   export PTILE=1
   export NTASK=1
   export OMP_NUM_THREADS=20
else
   nodes='1*{select[craylinux && !vnode]} + 24*{select[craylinux && vnode]span[ptile=24]}'
   export PTILE=1
   export NTASK=1
   export OMP_NUM_THREADS=1
fi


bsub -J ${job} -oo $logfile -q ${QUEUE} -P MDLST-T2O \
     -W 2:00 -M 2000 \
     -extsched 'CRAYLINUX[]' \
     -R "$nodes" \
     -w "$deps" \
     $jobCard

#  Exit here with $cyc is 06 or 18
if [ $cyc -eq 06 -o $cyc -eq 18 ]; then
   exit 0
fi
########################################################################
#   JGFSMOS_WX_EXT_PRDGEN
########################################################################
jobCard=$HOMEmdl/jobs/JGFSMOS_WX_EXT_PRDGEN_RETRO
export job=gfsmos_wx_extprdgen_${cyc}_${pid}
# Change COMIN back to COMOUT
export COMIN=$COMOUT
# Define DATA and create directory
export DATA=$STMPROOT/retro/gfsmos_wx_extprdgen_${cyc}
export logfile=$dailylog/$job.out
export out_dir=$dailylog
# Set dependencies
if [[ "$range" == "both" ]]; then
   deps="done(gfsmos_extprdgen_${cyc}_${pid}) && done(gfsmos_wx_prdgen_${cyc}_${pid})"
else
   deps="done(gfsmos_extprdgen_${cyc}_${pid})"
fi

export PTILE=1
export NTASK=1
export OMP_NUM_THREADS=20

bsub -J ${job} -oo $logfile -q ${QUEUE} -P MDLST-T2O \
     -W 1:00 -M 1000 \
     -extsched 'CRAYLINUX[]' \
     -R '1*{select[craylinux && !vnode]} + 48*{select[craylinux && vnode]span[ptile=24]}' \
     -w "$deps" \
     $jobCard

fi #endif for ext/both

exit 0
