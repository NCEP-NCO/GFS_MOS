#!/bin/sh
date
export PS4=' $SECONDS + '
set -x

envir=${envir:?}                # Typically set to prod
DATAROOT=${DATAROOT:?}          # Typically default to {DATAROOT:-/tmpnwprd1}
COMROOT=${COMROOT:?}            # Typically default to -/com
PACKAGEROOT=${PACKAGEROOT:?}    # Typically default to -/nw${envir}}

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=${pid:-$$}
export DATA=${DATA:-$DATAROOT/${job}}.${pid}
mkdir -p $DATA
cd $DATA
export cycle=${cycle:-t${cyc}z}

####################################
# Specify NET Name and RUN
#
# RUN - RUN grib field to repack
####################################
export NET=gfs_mos
export RUN=gfs_mos

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $com
# SENDDBN  - Send com files to OSO
# SENDDBN_NTC  - Send pcom files
####################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDDBN_NTC=${SENDDBN_NTC:-YES}

####################################
# Specify GFS-MOS version number
####################################
export GFSMOS_MODEL_VERSION=${GFSMOS_MODEL_VERSION:-${gfsmos_ver}}
export GFSMOS_CODE_VERSION=${GFSMOS_CODE_VERSION:-${mos_shared_ver}}

####################################
# Specify Execution Areas
####################################
export FIXgfs_mos=${FIXgfs_mos:-$HOMEgfs_mos/fix}
export PARMgfs_mos=${PARMgfs_mos:-$HOMEgfs_mos/parm}
export SCRIPTSgfs_mos=${SCRIPTSgfs_mos:-$HOMEgfs_mos/scripts}

#export HOMEcode=${HOMEcode:-$PACKAGEROOT/mos_shared.${GFSMOS_CODE_VERSION}}
#export EXECcode=${EXECcode:-$HOMEcode/exec}
#export FIXcode=${FIXcode:-$HOMEcode/fix}
#export PARMcode=${PARMcode:-$HOMEcode/parm}

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. ./PDY

##############################################
# Define COM directories
##############################################
export COMIN=${COMIN:-$(compath.py ${envir}/com/$RUN/${gfs_mos_ver}/$RUN.${PDY})}
export COMINm1=${COMINm1:-$(compath.py ${envir}/com/$RUN/${gfs_mos_ver}/$RUN.${PDYm1})}
export COMOUT=${COMOUT:-$(compath.py -o ${RUN}/${gfs_mos_ver}/${RUN}.${PDY})}
export COMOUTwmo=${COMOUTwmo:-$COMOUT/wmo}
mkdir -m 775 -p $COMOUT $COMOUTwmo

env

########################################
# EXECUTE THE SCRIPTS USING MPMD
########################################
chmod 755 $DATA/mpmdscript_omp

mkdir -p $DATA/station
$SCRIPTSgfs_mos/exgfsmos_station_prdgen.sh
export err=$?; err_chk

if [ -f $pgmout ]; then
   cat $pgmout
fi

msg="JOB $job HAS COMPLETED NORMALLY"
postmsg  "$msg"

if [ "$KEEPDATA" != YES ]; then
   cd $DATAROOT
   rm -rf $DATA
fi

date
